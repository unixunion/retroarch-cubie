#!/bin/bash

#  RetroPie-Setup - Shell script for initializing Raspberry Pi 
#  with RetroArch, various cores, and EmulationStation (a graphical 
#  front end).
# 
#  (c) Copyright 2012-2014  Florian MÃ¼ller (contact@petrockblock.com)
# 
#  RetroPie-Setup homepage: https://github.com/petrockblog/RetroPie-Setup
# 
#  Permission to use, copy, modify and distribute RetroPie-Setup in both binary and
#  source form, for non-commercial purposes, is hereby granted without fee,
#  providing that this license information and copyright notice appear with
#  all copies and any derived work.
# 
#  This software is provided 'as-is', without any express or implied
#  warranty. In no event shall the authors be held liable for any damages
#  arising from the use of this software.
# 
#  RetroPie-Setup is freeware for PERSONAL USE only. Commercial users should
#  seek permission of the copyright holders first. Commercial use includes
#  charging money for RetroPie-Setup or software derived from RetroPie-Setup.
# 
#  The copyright holders request that bug fixes and improvements to the code
#  should be forwarded to them so everyone can benefit from the modifications
#  in future versions.
# 
#  Many, many thanks go to all people that provide the individual packages!!!
# 
#  Raspberry Pi is a trademark of the Raspberry Pi Foundation.
# 

# downloads and installs pre-compiles binaries of all essential programs and libraries
function rps_downloadBinaries()
{
    printMsg "Downloading binaries archive"
    # wget --progress=bar:force -O - 'http://blog.petrockblock.com/?wpdmdl=3' | tar jx --overwrite -C $rootdir RetroPie
    wget -O binariesDownload.tar.bz2 http://downloads.petrockblock.com/RetroPieSetupBinaries_240614.tar.bz2
    tar -jxvf binariesDownload.tar.bz2 -C $rootdir
    pushd $rootdir/retropie
    cp -r * ../
    popd    
    rm -rf $rootdir/retropie
    rm binariesDownload.tar.bz2   
}

# download, extract, and install binaries
function rps_main_binaries()
{
    __INFMSGS=""

    clear
    printMsg "Binaries-based installation"
    now=$(date +'%d%m%Y_%H%M') 
    {
        # install all needed dependencies
        source $scriptdir/retropie_packages.sh 101 dependencies
        source $scriptdir/retropie_packages.sh 119 dependencies
        source $scriptdir/retropie_packages.sh 127 dependencies
        source $scriptdir/retropie_packages.sh 207 dependencies
        source $scriptdir/retropie_packages.sh 302 dependencies
        source $scriptdir/retropie_packages.sh 303 dependencies

        source $scriptdir/retropie_packages.sh 300           # update and upgrade APT packages
        source $scriptdir/retropie_packages.sh 318           # APT clean up
        source $scriptdir/retropie_packages.sh 315           # modules

        rps_downloadBinaries        # download pre-compiled binaries and extract them

        source $scriptdir/retropie_packages.sh 323           # install SDL 2.0.1 binaries
        source $scriptdir/retropie_packages.sh 303 install   # ES start script
        source $scriptdir/retropie_packages.sh 303 install   # ES start script
        source $scriptdir/retropie_packages.sh 303 configure # ES es_systems
        source $scriptdir/retropie_packages.sh 306 install   # SNESDev config file
        source $scriptdir/retropie_packages.sh 317           # disable time outs
        source $scriptdir/retropie_packages.sh 304           # ES theme 'Simple'
        source $scriptdir/retropie_packages.sh 308           # RetroArch auto-config files
        
        source $scriptdir/retropie_packages.sh 106           # Stella emulator
        source $scriptdir/retropie_packages.sh 123           # ScummVM
        source $scriptdir/retropie_packages.sh 124           # ZMachine
        source $scriptdir/retropie_packages.sh 125           # ZXSpectrum Fuse
        source $scriptdir/retropie_packages.sh 109           # C64 ROMs
        source $scriptdir/retropie_packages.sh 113           # Hatari
        source $scriptdir/retropie_packages.sh 105           # Dosbox
        source $scriptdir/retropie_packages.sh 110           # eDuke3D

        source $scriptdir/retropie_packages.sh 316           # set avoid safe mode
        source $scriptdir/retropie_packages.sh 305           # video mode script 'runcommand'
        source $scriptdir/retropie_packages.sh 310           # Samba ROM Service
        source $scriptdir/retropie_packages.sh 311           # USB ROM Service

        # configure all emulator and libretro components
        for (( i = 100; i <= 128; i++ )); do
            source $scriptdir/retropie_packages.sh $i configure
        done

        for (( i = 200; i <= 211; i++ )); do
            source $scriptdir/retropie_packages.sh $i configure
        done

    } 2>&1 | tee >(gzip --stdout > $scriptdir/logs/run_$now.log.gz)

    chown -R $user:$user $scriptdir/logs/run_$now.log.gz

    __INFMSGS="$__INFMSGS The Amiga emulator can be started from command line with '$rootdir/emulators/uae4all/uae4all'. Note that you must manually copy a Kickstart rom with the name 'kick.rom' to the directory $rootdir/emulators/uae4all/."
    __INFMSGS="$__INFMSGS You need to copy NeoGeo BIOS files to the folder '$rootdir/emulators/gngeo-0.7/neogeo-bios/'."
    __INFMSGS="$__INFMSGS You need to copy Intellivision BIOS files to the folder '/usr/local/share/jzintv/rom'."

    if [[ ! -z $__INFMSGS ]]; then
        dialog --backtitle "PetRockBlock.com - RetroPie Setup. Installation folder: $rootdir for user $user" --msgbox "$__INFMSGS" 20 60    
    fi

    dialog --backtitle "PetRockBlock.com - RetroPie Setup. Installation folder: $rootdir for user $user" --msgbox "Finished tasks.\nStart the front end with 'emulationstation'. You now have to copy roms to the roms folders. Have fun!" 22 76    
}

function rps_main_updatescript()
{
  printMsg "Fetching latest version of the RetroPie Setup Script."
  pushd $scriptdir
  if [[ ! -d ".git" ]]; then
    dialog --backtitle "PetRockBlock.com - RetroPie Setup." --msgbox "Cannot find direcotry '.git'. Please clone the RetroPie Setup script via 'git clone git://github.com/petrockblog/RetroPie-Setup.git'" 20 60    
    popd
    return
  fi
  git pull
  popd
  dialog --backtitle "PetRockBlock.com - ORetroPie Setup." --msgbox "Fetched the latest version of the RetroPie Setup script. You need to restart the script." 20 60    
}

function rps_main_options()
{
    cmd=(dialog --separate-output --backtitle "PetRockBlock.com - RetroPie Setup. Installation folder: $rootdir for user $user" --checklist "Select options with 'space' and arrow keys. The default selection installs a complete set of packages and configures basic settings. The entries marked as (C) denote the configuration steps. For an update of an installation you would deselect these to keep all your settings untouched." 22 76 16)
    options=(100 "RetroArch                      " ON \
             101 "AdvMame                        " OFF \
             102 "Amiga emulator UAE4All         " OFF \
             103 "Atari 800 emulator             " OFF \
             104 "Armstrad CPC emulator          " OFF \
             105 "DOS Emulator Dosbox            " OFF \
             106 "Atari2600 emulator STELLA      " OFF \
             107 "Macintosh emulator             " OFF \
             108 "C64 emulator VICE              " OFF \
             109 "C64 ROMs                       " OFF \
             110 "Duke3D Port                    " OFF \
             111 "GameBoy Advance emulator       " OFF \
             112 "NeoGeo emulator GnGeoPi        " OFF \
             113 "Atari emulator Hatari          " OFF \
             114 "MAME emulator MAME4All-Pi      " OFF \
             115 "Gamegear emulator Osmose       " OFF \
             116 "Intellivision emulator         " OFF \
             117 "Apple 2 emulator Linapple      " OFF \
             118 "N64 emulator MUPEN64Plus-RPi   " OFF \
             119 "SNES emulator SNES9X-RPi       " ON \
             120 "FBA emulator PiFBA             " OFF \
             121 "SNES emulator PiSNES           " OFF \
             122 "DOS Emulator rpix86            " OFF \
             123 "ScummVM                        " OFF \
             124 "ZMachine                       " OFF \
             125 "ZXSpectrum emulator Fuse       " OFF \
             126 "ZXSpectrum emulator FBZX       " OFF \
             127 "MSX emulator OpenMSX           " OFF \
             128 "DOS emulator FastDosbox        " OFF \
             200 "SNES LibretroCore PocketSNES   " ON \
             201 "Genesis LibretroCore Picodrive " OFF \
             202 "Atari 2600 LibretroCore Stella " OFF \
             203 "Cave Story LibretroCore        " OFF \
             204 "Doom LibretroCore              " OFF \
             205 "Gameboy Color LibretroCore     " OFF \
             206 "MAME LibretroCore              " OFF \
             207 "FBA LibretroCore               " OFF \
             208 "NES LibretroCore fceu-next     " ON \
             209 "Genesis/Megadrive LibretroCore " OFF \
             210 "TurboGrafx 16 LibretroCore     " OFF \
             211 "Playstation 1 LibretroCore     " OFF \
             212 "Mednafen PCE Fast LibretroCore " OFF \
             300 "Update APT packages            " OFF \
             301 "Package Repository             " ON \
             302 "SDL 2.0.1                      " ON \
             303 "EmulationStation               " ON \
             304 "EmulationStation Theme Simple  " ON \
             305 "Video mode script 'runcommand' " ON \
             308 "RetroArch-AutoConfigs          " ON \
             309 "Bash Welcome Tweak             " ON \
             315 "Modules UInput, Joydev, ALSA   " ON \
             316 "Set avoid_safe_mode            " ON \
             317 "Disable system timeouts        " ON \
             318 "Handle APT packages            " ON \
             323 "Install SDL 2.0.1 binaries     " OFF )
    choices=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
    clear
    __ERRMSGS=""
    __INFMSGS=""
    if [ "$choices" != "" ]; then
        now=$(date +'%d%m%Y_%H%M')
        logfilename=$scriptdir/logs/run_$now.log.gz
        touch $logfilename
        for choice in $choices
        do
            case $choice in
                100) source $scriptdir/retropie_packages.sh 100 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                101) source $scriptdir/retropie_packages.sh 101 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                102) source $scriptdir/retropie_packages.sh 102 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                103) source $scriptdir/retropie_packages.sh 103 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                104) source $scriptdir/retropie_packages.sh 104 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                105) source $scriptdir/retropie_packages.sh 105 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                106) source $scriptdir/retropie_packages.sh 106 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                107) source $scriptdir/retropie_packages.sh 107 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                108) source $scriptdir/retropie_packages.sh 108 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                109) source $scriptdir/retropie_packages.sh 109 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                110) source $scriptdir/retropie_packages.sh 110 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                111) source $scriptdir/retropie_packages.sh 111 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                112) source $scriptdir/retropie_packages.sh 112 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                113) source $scriptdir/retropie_packages.sh 113 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                114) source $scriptdir/retropie_packages.sh 114 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                115) source $scriptdir/retropie_packages.sh 115 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                116) source $scriptdir/retropie_packages.sh 116 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                117) source $scriptdir/retropie_packages.sh 117 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                118) source $scriptdir/retropie_packages.sh 118 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                119) source $scriptdir/retropie_packages.sh 119 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                120) source $scriptdir/retropie_packages.sh 120 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                121) source $scriptdir/retropie_packages.sh 121 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                122) source $scriptdir/retropie_packages.sh 122 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                123) source $scriptdir/retropie_packages.sh 123 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                124) source $scriptdir/retropie_packages.sh 124 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                125) source $scriptdir/retropie_packages.sh 125 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                126) source $scriptdir/retropie_packages.sh 126 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                127) source $scriptdir/retropie_packages.sh 127 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                128) source $scriptdir/retropie_packages.sh 128 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                200) source $scriptdir/retropie_packages.sh 200 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                201) source $scriptdir/retropie_packages.sh 201 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                202) source $scriptdir/retropie_packages.sh 202 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                203) source $scriptdir/retropie_packages.sh 203 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                204) source $scriptdir/retropie_packages.sh 204 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                205) source $scriptdir/retropie_packages.sh 205 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                206) source $scriptdir/retropie_packages.sh 206 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                207) source $scriptdir/retropie_packages.sh 207 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                208) source $scriptdir/retropie_packages.sh 208 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                209) source $scriptdir/retropie_packages.sh 209 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                210) source $scriptdir/retropie_packages.sh 210 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                211) source $scriptdir/retropie_packages.sh 211 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                212) source $scriptdir/retropie_packages.sh 212 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                300) source $scriptdir/retropie_packages.sh 300 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                301) source $scriptdir/retropie_packages.sh 301 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                302) source $scriptdir/retropie_packages.sh 302 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                303) source $scriptdir/retropie_packages.sh 303 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                304) source $scriptdir/retropie_packages.sh 304 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                305) source $scriptdir/retropie_packages.sh 305 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                308) source $scriptdir/retropie_packages.sh 308 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                309) source $scriptdir/retropie_packages.sh 309 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                315) source $scriptdir/retropie_packages.sh 315 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                316) source $scriptdir/retropie_packages.sh 316 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                317) source $scriptdir/retropie_packages.sh 317 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                318) source $scriptdir/retropie_packages.sh 318 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                323) source $scriptdir/retropie_packages.sh 323 2>&1 | tee >(gzip --stdout >$logfilename) ;;
            esac
        done

        if [[ ! -z $__ERRMSGS ]]; then
            dialog --backtitle "PetRockBlock.com - RetroPie Setup. Installation folder: $rootdir for user $user" --msgbox "$__ERRMSGS See debug.log for more details." 20 60    
        fi

        if [[ ! -z $__INFMSGS ]]; then
            dialog --backtitle "PetRockBlock.com - RetroPie Setup. Installation folder: $rootdir for user $user" --msgbox "$__INFMSGS" 20 60    
        fi

        dialog --backtitle "PetRockBlock.com - RetroPie Setup. Installation folder: $rootdir for user $user" --msgbox "Finished tasks.\nStart the front end with 'emulationstation'. You now have to copy roms to the roms folders. Have fun!" 20 60    

        chown -R $user:$user $logfilename
    fi
}

function rps_main_setup()
{
    now=$(date +'%d%m%Y_%H%M')
    logfilename=$scriptdir/logs/run_$now.log.gz
    touch $logfilename
    while true; do
        cmd=(dialog --backtitle "PetRockBlock.com - RetroPie Setup. Installation folder: $rootdir for user $user" --menu "Choose task." 22 76 16)

        options=(306  "SNESDev                        " 
                 307  "Xarcade2Jstick                 " 
                 310  "Samba ROM Shares               " 
                 311  "USB ROM Service                " 
                 312  "Enable/disable Splashscreen    " 
                 313  "Select Splashscreen            " 
                 314  "RetroNetplay                   " 
                 319  "Auto-start EmulationStation    " 
                 320  "Install XBox contr. 360 driver " 
                 321  "Install PS3 controller driver  " 
                 322  "Register RetroArch controller  " 
                 324  "Configure Audio Settings       " 
                 325  "ES-Config                      " 
                 326  "Gamecon drvier                 " )
        choices=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)    
        if [ "$choices" != "" ]; then
            case $choices in
                306) source $scriptdir/retropie_packages.sh 306 configure 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                307) source $scriptdir/retropie_packages.sh 307 configure 2>&1 | tee >(gzip --stdout >$logfilename) ;;
                310) source $scriptdir/retropie_packages.sh 310           2>&1 | tee >(gzip --stdout >$logfilename) ;;
                311) source $scriptdir/retropie_packages.sh 311           2>&1 | tee >(gzip --stdout >$logfilename) ;;
                312) source $scriptdir/retropie_packages.sh 312           2>&1 | tee >(gzip --stdout >$logfilename) ;;
                313) source $scriptdir/retropie_packages.sh 313           2>&1 | tee >(gzip --stdout >$logfilename) ;;
                314) source $scriptdir/retropie_packages.sh 314           2>&1 | tee >(gzip --stdout >$logfilename) ;;
                319) source $scriptdir/retropie_packages.sh 319           2>&1 | tee >(gzip --stdout >$logfilename) ;;
                320) source $scriptdir/retropie_packages.sh 320           2>&1 | tee >(gzip --stdout >$logfilename) ;;
                321) source $scriptdir/retropie_packages.sh 321           2>&1 | tee >(gzip --stdout >$logfilename) ;;
                322) source $scriptdir/retropie_packages.sh 322           2>&1 | tee >(gzip --stdout >$logfilename) ;;
                324) source $scriptdir/retropie_packages.sh 324           2>&1 | tee >(gzip --stdout >$logfilename) ;;
                325) source $scriptdir/retropie_packages.sh 325           2>&1 | tee >(gzip --stdout >$logfilename) ;;
                326) source $scriptdir/retropie_packages.sh 326 install   2>&1 | tee >(gzip --stdout >$logfilename) ;;
            esac
        else
            break
        fi
    done    

    chown -R $user:$user $logfilename
}

function rps_main_reboot()
{
    clear
    reboot    
}
